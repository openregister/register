# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="kA>v_N3ee1MyDuh`=eIPOD>I<enji6LSh1FP9/9UZp?Q/ovyZ:4vTd=`cM;9Q`jQ"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global= controllers.conf.ApplicationGlobal

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=WARN

# Logger provided to your application:
logger.application=WARN

# jdbc connection pool
logger.com.mchange.v2.c3p0=ERROR


# Name of this register
register.name=school
register.name=${?REGISTER_NAME}

# Register index page copy. Set these as enviroment variables to override
register.title=The official register of test entries throughout the UK
register.title=${?REGISTER_TITLE}
register.registry=Test registry
register.registry=${?REGISTER_REGISTRY}
register.description=This register exists as an accurate list of all test entries.
register.description=${?REGISTER_DESCRIPTION}
register.searchtext=${?SEARCH_TEXT}
register.department=Test department
register.department=${?REGISTER_DEPARTMENT}

# Database configurations
# Format for mongodb:
# mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]
# Format for postgresql:
# postgresql://[user[:password]@][netloc][:port][/dbname][?param1=value1&...]
//store.uri="mongodb://localhost/openregister"
store.uri="postgresql://localhost/openregister"
store.uri = ${?DATABASE_URL}


registers.service.fields="register,name,fields,text"  # Should we move this somewhere else?

registers.service.url="http://register.openregister.org"
registers.service.url=${?REGISTERS_SERVICE_URL}
